# Generated by Django 4.2.7 on 2025-08-14 11:46

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('region', models.CharField(max_length=100)),
                ('segment', models.CharField(max_length=100)),
                ('credit_limit', models.DecimalField(decimal_places=2, max_digits=12)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('active', models.BooleanField(default=True)),
                ('channels', models.JSONField(default=list, help_text='Sales channels')),
                ('seasonality', models.CharField(choices=[('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], default='medium', max_length=10)),
                ('tier', models.CharField(choices=[('platinum', 'Platinum'), ('gold', 'Gold'), ('silver', 'Silver'), ('bronze', 'Bronze')], default='bronze', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'customers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('sku', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=500)),
                ('category', models.CharField(max_length=100)),
                ('brand', models.CharField(max_length=100)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cost_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('unit', models.CharField(default='pcs', max_length=50)),
                ('active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True)),
                ('seasonal', models.BooleanField(default=False)),
                ('seasonal_months', models.JSONField(blank=True, default=list)),
                ('min_order_quantity', models.IntegerField(default=1)),
                ('lead_time', models.IntegerField(default=0, help_text='Lead time in days')),
                ('supplier', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'items',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['sku'], name='items_sku_0a66c0_idx'), models.Index(fields=['category', 'brand'], name='items_categor_effab8_idx'), models.Index(fields=['active'], name='items_active_2abd9b_idx')],
            },
        ),
        migrations.CreateModel(
            name='ForecastTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('seasonality_pattern', models.CharField(default='Default Seasonal', max_length=50)),
                ('default_confidence', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10)),
                ('monthly_distribution', models.JSONField(default=dict, help_text='Monthly distribution percentages')),
                ('is_public', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'forecast_templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ForecastSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('total_items', models.IntegerField(default=0)),
                ('total_yearly_value', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_monthly_values', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('approved', 'Approved'), ('revised', 'Revised')], default='draft', max_length=10)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forecast_summaries', to='forecasts.customer')),
            ],
            options={
                'db_table': 'forecast_summaries',
                'ordering': ['-year', 'customer__name'],
                'unique_together': {('customer', 'year')},
            },
        ),
        migrations.CreateModel(
            name='CustomerItemForecast',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('yearly_total', models.IntegerField(default=0, help_text='Total forecast units for the year')),
                ('yearly_budget_impact', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('approved', 'Approved'), ('revised', 'Revised')], default='draft', max_length=10)),
                ('confidence', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_forecasts', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forecasts', to='forecasts.customer')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forecasts', to='forecasts.item')),
            ],
            options={
                'db_table': 'customer_item_forecasts',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomerAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_forecast', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('monthly_breakdown', models.JSONField(default=dict)),
                ('category_breakdown', models.JSONField(default=dict)),
                ('channel_breakdown', models.JSONField(default=dict)),
                ('growth_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('seasonal_trends', models.JSONField(default=list)),
                ('risk_score', models.DecimalField(decimal_places=1, default=0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('confidence_score', models.DecimalField(decimal_places=1, default=0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('calculated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='forecasts.customer')),
            ],
            options={
                'db_table': 'customer_analytics',
            },
        ),
        migrations.CreateModel(
            name='BudgetImpact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(max_length=3)),
                ('year', models.IntegerField()),
                ('original_budget', models.DecimalField(decimal_places=2, max_digits=12)),
                ('forecast_impact', models.DecimalField(decimal_places=2, max_digits=12)),
                ('new_projected_budget', models.DecimalField(decimal_places=2, max_digits=12)),
                ('variance', models.DecimalField(decimal_places=2, max_digits=12)),
                ('variance_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('forecast_summary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budget_impacts', to='forecasts.forecastsummary')),
            ],
            options={
                'db_table': 'budget_impacts',
                'ordering': ['year', 'month'],
            },
        ),
        migrations.CreateModel(
            name='MonthlyForecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(max_length=3)),
                ('year', models.IntegerField()),
                ('month_index', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(11)])),
                ('quantity', models.IntegerField(default=0)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_value', models.DecimalField(decimal_places=2, max_digits=12)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer_item_forecast', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monthly_forecasts', to='forecasts.customeritemforecast')),
            ],
            options={
                'db_table': 'monthly_forecasts',
                'ordering': ['year', 'month_index'],
                'indexes': [models.Index(fields=['year', 'month_index'], name='monthly_for_year_86f17a_idx')],
                'unique_together': {('customer_item_forecast', 'month', 'year')},
            },
        ),
        migrations.CreateModel(
            name='ForecastHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('created', 'Created'), ('updated', 'Updated'), ('submitted', 'Submitted'), ('approved', 'Approved'), ('revised', 'Revised'), ('deleted', 'Deleted')], max_length=20)),
                ('previous_data', models.JSONField(default=dict)),
                ('new_data', models.JSONField(default=dict)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField(blank=True)),
                ('changed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('customer_item_forecast', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='forecasts.customeritemforecast')),
            ],
            options={
                'db_table': 'forecast_history',
                'ordering': ['-changed_at'],
                'indexes': [models.Index(fields=['customer_item_forecast', 'changed_at'], name='forecast_hi_custome_a54545_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='customeritemforecast',
            index=models.Index(fields=['customer', 'status'], name='customer_it_custome_d1c863_idx'),
        ),
        migrations.AddIndex(
            model_name='customeritemforecast',
            index=models.Index(fields=['created_by', 'status'], name='customer_it_created_80431e_idx'),
        ),
        migrations.AddIndex(
            model_name='customeritemforecast',
            index=models.Index(fields=['item', 'confidence'], name='customer_it_item_id_807ba1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='customeritemforecast',
            unique_together={('customer', 'item', 'created_by')},
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['code'], name='customers_code_083fcd_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['region', 'segment'], name='customers_region_9a4cb9_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['manager', 'active'], name='customers_manager_d76288_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='budgetimpact',
            unique_together={('forecast_summary', 'month', 'year')},
        ),
    ]
