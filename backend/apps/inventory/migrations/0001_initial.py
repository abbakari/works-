# Generated by Django 4.2.7 on 2025-08-15 06:51

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ItemBrand',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('logo_url', models.URLField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('contact_info', models.JSONField(default=dict, help_text='Email, phone, address')),
                ('is_active', models.BooleanField(default=True)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'item_brands',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StockOverview',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent_to_manager', 'Sent to Manager'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('completed', 'Completed')], default='draft', max_length=20)),
                ('manager_review', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_overviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'stock_overviews',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('contact_person', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('address', models.JSONField(default=dict, help_text='Street, city, state, zipCode, country')),
                ('payment_terms', models.CharField(max_length=255)),
                ('lead_time', models.IntegerField(default=0, help_text='Lead time in days')),
                ('min_order_value', models.DecimalField(decimal_places=2, max_digits=12)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('tax_id', models.CharField(blank=True, max_length=50)),
                ('rating', models.DecimalField(decimal_places=1, default=0, max_digits=2, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('is_active', models.BooleanField(default=True)),
                ('categories', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'suppliers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StockProjection',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('item_name', models.CharField(max_length=500)),
                ('category', models.CharField(max_length=100)),
                ('brand', models.CharField(max_length=100)),
                ('current_stock', models.IntegerField()),
                ('projected_demand', models.IntegerField()),
                ('projection_period', models.CharField(choices=[('1_month', '1 Month'), ('3_months', '3 Months'), ('6_months', '6 Months'), ('1_year', '1 Year')], max_length=15)),
                ('seasonal_factor', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('notes', models.TextField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent_to_manager', 'Sent to Manager'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('completed', 'Completed')], default='draft', max_length=20)),
                ('manager_feedback', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_projections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'stock_projections',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StockOverviewItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=500)),
                ('category', models.CharField(max_length=100)),
                ('current_stock', models.IntegerField()),
                ('status', models.CharField(choices=[('good', 'Good'), ('warning', 'Warning'), ('critical', 'Critical')], max_length=10)),
                ('notes', models.TextField(blank=True)),
                ('stock_overview', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.stockoverview')),
            ],
            options={
                'db_table': 'stock_overview_items',
            },
        ),
        migrations.CreateModel(
            name='StockAlert',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('item_name', models.CharField(max_length=500)),
                ('current_stock', models.IntegerField()),
                ('minimum_level', models.IntegerField()),
                ('alert_type', models.CharField(choices=[('low_stock', 'Low Stock'), ('out_of_stock', 'Out of Stock'), ('overstocked', 'Overstocked')], max_length=15)),
                ('category', models.CharField(max_length=100)),
                ('brand', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent_to_manager', 'Sent to Manager'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('completed', 'Completed')], default='draft', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('manager_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_alerts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'stock_alerts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ItemCategory',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('display_order', models.IntegerField(default=0)),
                ('icon_url', models.URLField(blank=True)),
                ('color', models.CharField(blank=True, help_text='Hex color code', max_length=7)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('margin_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_categories', to='inventory.itemcategory')),
            ],
            options={
                'verbose_name': 'Item Category',
                'verbose_name_plural': 'Item Categories',
                'db_table': 'item_categories',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('sku', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True)),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('average_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_value', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('current_stock', models.IntegerField(default=0)),
                ('min_stock', models.IntegerField(default=0)),
                ('max_stock', models.IntegerField(default=0)),
                ('reorder_point', models.IntegerField(default=0)),
                ('reorder_quantity', models.IntegerField(default=0)),
                ('unit', models.CharField(default='pcs', max_length=50)),
                ('supplier', models.CharField(max_length=255)),
                ('supplier_code', models.CharField(blank=True, max_length=100)),
                ('barcode', models.CharField(blank=True, max_length=100)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('shelf', models.CharField(blank=True, max_length=50)),
                ('weight', models.DecimalField(blank=True, decimal_places=3, max_digits=8, null=True)),
                ('dimensions', models.JSONField(default=dict, help_text='Length, width, height')),
                ('is_active', models.BooleanField(default=True)),
                ('is_serial_tracked', models.BooleanField(default=False)),
                ('is_batch_tracked', models.BooleanField(default=False)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('stock_status', models.CharField(choices=[('low', 'Low Stock'), ('normal', 'Normal'), ('high', 'High Stock'), ('out_of_stock', 'Out of Stock')], default='normal', max_length=15)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_stock_update', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.itembrand')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.itemcategory')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'inventory_items',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryAdjustment',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('old_quantity', models.IntegerField()),
                ('new_quantity', models.IntegerField()),
                ('adjustment_quantity', models.IntegerField()),
                ('reason', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_adjustments', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adjustments', to='inventory.inventoryitem')),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performed_adjustments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'inventory_adjustments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StockRequest',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('stock_alert', 'Stock Alert'), ('new_request', 'New Request'), ('stock_projection', 'Stock Projection'), ('stock_overview', 'Stock Overview'), ('reorder_request', 'Reorder Request')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('item_name', models.CharField(max_length=500)),
                ('category', models.CharField(max_length=100)),
                ('brand', models.CharField(max_length=100)),
                ('requested_quantity', models.IntegerField()),
                ('current_stock', models.IntegerField()),
                ('reason', models.TextField()),
                ('customer_name', models.CharField(blank=True, max_length=255)),
                ('urgency', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent_to_manager', 'Sent to Manager'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('completed', 'Completed')], default='draft', max_length=20)),
                ('created_by_role', models.CharField(max_length=20)),
                ('sent_to_manager_at', models.DateTimeField(blank=True, null=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('manager_comments', models.TextField(blank=True)),
                ('expected_delivery', models.DateField(blank=True, null=True)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('supplier_info', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_requests', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_stock_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'stock_requests',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['created_by', 'status'], name='stock_reque_created_d96ba6_idx'), models.Index(fields=['urgency', 'status'], name='stock_reque_urgency_b34c57_idx')],
            },
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('in', 'Stock In'), ('out', 'Stock Out'), ('adjustment', 'Adjustment'), ('transfer', 'Transfer')], max_length=15)),
                ('reason', models.CharField(choices=[('purchase', 'Purchase'), ('sale', 'Sale'), ('return', 'Return'), ('damage', 'Damage'), ('expired', 'Expired'), ('adjustment', 'Adjustment'), ('transfer', 'Transfer'), ('production', 'Production')], max_length=15)),
                ('quantity', models.IntegerField()),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('reference', models.CharField(blank=True, max_length=255)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('from_location', models.CharField(blank=True, max_length=100)),
                ('to_location', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('batch_number', models.CharField(blank=True, max_length=100)),
                ('serial_numbers', models.JSONField(blank=True, default=list)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_movements', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='inventory.inventoryitem')),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performed_movements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'stock_movements',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['item', 'type'], name='stock_movem_item_id_1c8f53_idx'), models.Index(fields=['created_at'], name='stock_movem_created_07bdcc_idx'), models.Index(fields=['performed_by'], name='stock_movem_perform_e193c8_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='inventoryitem',
            index=models.Index(fields=['sku'], name='inventory_i_sku_af71e8_idx'),
        ),
        migrations.AddIndex(
            model_name='inventoryitem',
            index=models.Index(fields=['category', 'brand'], name='inventory_i_categor_8458ec_idx'),
        ),
        migrations.AddIndex(
            model_name='inventoryitem',
            index=models.Index(fields=['stock_status'], name='inventory_i_stock_s_f5e7f5_idx'),
        ),
        migrations.AddIndex(
            model_name='inventoryitem',
            index=models.Index(fields=['supplier'], name='inventory_i_supplie_b5713c_idx'),
        ),
    ]
